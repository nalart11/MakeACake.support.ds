import disnake
from disnake.ext import commands

# –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∫–∞–Ω–∞–ª–æ–≤ –∏ —Ä–æ–ª–µ–π
ADMIN_CHANNEL_ID = 0
ADMIN_ROLE_ID = 0

# –¢–æ–∫–µ–Ω Discord
TOKEN = 'YOUR_TOKEN'

intents = disnake.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
active_chats = {}

# –°–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤
translations = {
    'russian': {
        'choose_language': 'üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / üá¨üáß Choose your language / üá∑üá∏ –ò–∑–∞–±–µ—Ä–∏ —ò–µ–∑–∏–∫',
        'ask_question': '‚ùì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å',
        'close_ticket': 'üîí –ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç',
        'confirm_close_ticket': '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç?',
        'ticket_closed': '–¢–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç –∏ –∫–∞–Ω–∞–ª —É–¥–∞–ª—ë–Ω.',
        'private_thread_created': '–ü—Ä–∏–≤–∞—Ç–Ω–∞—è –≤–µ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∞. –ú–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥.',
        'user_opened_ticket': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –æ—Ç–∫—Ä—ã–ª —Ç–∏–∫–µ—Ç.'
    },
    'english': {
        'choose_language': 'üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / üá¨üáß Choose your language / üá∑üá∏ –ò–∑–∞–±–µ—Ä–∏ —ò–µ–∑–∏–∫',
        'ask_question': '‚ùì Ask a question',
        'close_ticket': 'üîí Close ticket',
        'confirm_close_ticket': 'Are you sure you want to close the ticket?',
        'ticket_closed': 'Ticket closed and channel deleted.',
        'private_thread_created': 'Private thread created. You can start a dialog.',
        'user_opened_ticket': 'User {user} opened a ticket.'
    },
    'serbian': {
        'choose_language': 'üá∑üá∫ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / üá¨üáß Choose your language / üá∑üá∏ –ò–∑–∞–±–µ—Ä–∏ —ò–µ–∑–∏–∫',
        'ask_question': '‚ùì –ü–æ—Å—Ç–∞–≤–∏—Ç–µ –ø–∏—Ç–∞—ö–µ',
        'close_ticket': 'üîí –ó–∞—Ç–≤–æ—Ä–∏—Ç–µ —Ç–∏–∫–µ—Ç',
        'confirm_close_ticket': '–î–∞ –ª–∏ —Å—Ç–µ —Å–∏–≥—É—Ä–Ω–∏ –¥–∞ –∂–µ–ª–∏—Ç–µ –¥–∞ –∑–∞—Ç–≤–æ—Ä–∏—Ç–µ —Ç–∏–∫–µ—Ç?',
        'ticket_closed': '–¢–∏–∫–µ—Ç —ò–µ –∑–∞—Ç–≤–æ—Ä–µ–Ω –∏ –∫–∞–Ω–∞–ª —ò–µ –æ–±—Ä–∏—Å–∞–Ω.',
        'private_thread_created': '–ü—Ä–∏–≤–∞—Ç–Ω–∞ —Ç–µ–º–∞ —ò–µ –Ω–∞–ø—Ä–∞–≤—ô–µ–Ω–∞. –ú–æ–∂–µ—Ç–µ –∑–∞–ø–æ—á–µ—Ç–∏ –¥–∏—ò–∞–ª–æ–≥.',
        'user_opened_ticket': '–ö–æ—Ä–∏—Å–Ω–∏–∫ {user} —ò–µ –æ—Ç–≤–æ—Ä–∏–æ —Ç–∏–∫–µ—Ç.'
    }
}

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}')

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.slash_command(description="Start the bot")
async def start(inter):
    await inter.response.send_message(translations['russian']['choose_language'],
                                      view=LanguageSelectView())

# –ö–ª–∞—Å—Å –¥–ª—è –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
class LanguageSelectView(disnake.ui.View):
    @disnake.ui.button(label="üá∑üá∫ –†—É—Å—Å–∫–∏–π", style=disnake.ButtonStyle.primary)
    async def russian_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await send_main_menu(inter, 'russian')
    
    @disnake.ui.button(label="üá¨üáß English", style=disnake.ButtonStyle.primary)
    async def english_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await send_main_menu(inter, 'english')
    
    @disnake.ui.button(label="üá∑üá∏ –°—Ä–ø—Å–∫–∏", style=disnake.ButtonStyle.primary)
    async def serbian_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await send_main_menu(inter, 'serbian')

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def send_main_menu(inter, language):
    await inter.response.send_message(translations[language]['ask_question'], view=MainMenuView(language))

# –ö–ª–∞—Å—Å –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
class MainMenuView(disnake.ui.View):
    def __init__(self, language):
        super().__init__()
        self.language = language
        
        labels = self.get_labels(language)
        
        self.who_are_we_button.label = labels['who_are_we']
        self.partnership_button.label = labels['partnership']
        self.how_to_join_button.label = labels['how_to_join']
        self.change_language_button.label = labels['change_language']
        self.contact_us_button.label = labels['contact_us']
    
    @disnake.ui.button(style=disnake.ButtonStyle.secondary, row=0)
    async def who_are_we_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await self.send_info(inter, "–ö—Ç–æ –º—ã —Ç–∞–∫–∏–µ" if self.language == 'russian' else 
                                     "Who are we" if self.language == 'english' else 
                                     "–ö–æ —Å–º–æ")
    
    @disnake.ui.button(style=disnake.ButtonStyle.secondary, row=1)
    async def partnership_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await self.send_info(inter, "–ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ" if self.language == 'russian' else 
                                     "Partnership" if self.language == 'english' else 
                                     "–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ")
    
    @disnake.ui.button(style=disnake.ButtonStyle.secondary, row=2)
    async def how_to_join_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await self.send_info(inter, "–ö–∞–∫ –∫ –Ω–∞–º –ø–æ–ø–∞—Å—Ç—å" if self.language == 'russian' else 
                                     "How to get to us" if self.language == 'english' else 
                                     "–ö–∞–∫–æ –¥–æ—õ–∏ –¥–æ –Ω–∞—Å")
    
    @disnake.ui.button(style=disnake.ButtonStyle.secondary, row=3)
    async def change_language_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await start(inter)
    
    @disnake.ui.button(style=disnake.ButtonStyle.secondary, row=4)
    async def contact_us_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await start_dialog(inter, self.language)
    
    async def send_info(self, inter, topic):
        if topic == "–ö—Ç–æ –º—ã —Ç–∞–∫–∏–µ":
            await inter.response.send_message("–ú—ã - MakeACake Studios, –º–æ–ª–æ–¥–∞—è —Å—Ç—É–¥–∏—è –Ω–µ–¥–∞–≤–Ω–æ –ø–æ—è–≤–∏–≤—à–∞—è—Å—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∏–∑ –Ω–∏–æ—Ç–∫—É–¥–∞. –ù–∞—à —Å–æ–∑–¥–∞—Ç–µ–ª—å - –í–µ–ª–∏–∫–∏–π –∏ –ú–æ–≥—É—á–∏–π @nalart11, –æ–Ω –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç –≤—Å–µ–º –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–º –∑–¥–µ—Å—å.")
        elif topic == "–ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ":
            await inter.response.send_message('–î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –Ω–∏–∂–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤:\n[–ù–∞—à Discord –∫–∞–Ω–∞–ª](https://discord.com/invite/uKXcU3py3q)\n–ù–∞—à –¢–ì –∫–∞–Ω–∞–ª (–í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)\n[–¢–ì –≤–ª–∞–¥–µ–ª—å—Ü–∞](https://t.me/nalart11)')
        elif topic == "–ö–∞–∫ –∫ –Ω–∞–º –ø–æ–ø–∞—Å—Ç—å":
            await inter.response.send_message('–ù–∏–∫–∞–∫. üíÄ')
        elif topic == "Who are we":
            await inter.response.send_message("We are MakeACake Studios, a young studio that recently appeared almost out of nowhere. Our creator is the Great and Powerful @nalart11, he basically directs everything that happens here.")
        elif topic == "Partnership":
            await inter.response.send_message('To contact us you can use one of the following methods:\n[Our Discord channel](https://discord.com/invite/uKXcU3py3q)\nOur Telegramm channel (Temporarily unavailable)\n[Owner\'s Telegramm](https://t.me/nalart11)')
        elif topic == "How to get to us":
            await inter.response.send_message('No way. üíÄ')
        elif topic == "–ö–æ —Å–º–æ":
            await inter.response.send_message("–ú–∏ —Å–º–æ MakeACake Studios, –º–ª–∞–¥–∏ —Å—Ç—É–¥–∏–æ –∫–æ—ò–∏ —Å–µ –Ω–µ–¥–∞–≤–Ω–æ –ø–æ—ò–∞–≤–∏–æ –≥–æ—Ç–æ–≤–æ –Ω–∏–æ—Ç–∫—É–¥–∞. –ù–∞—à –∫—Ä–µ–∞—Ç–æ—Ä —ò–µ –í–µ–ª–∏–∫–∏ –∏ –ú–æ—õ–Ω–∏ @nalart11, –æ–Ω —É —Å—É—à—Ç–∏–Ω–∏ —Ä–µ–∂–∏—Ä–∞ —Å–≤–µ —à—Ç–æ —Å–µ –æ–≤–¥–µ –¥–µ—à–∞–≤–∞.")
        elif topic == "–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ":
            await inter.response.send_message('–î–∞ –±–∏—Å—Ç–µ –Ω–∞—Å –∫–æ–Ω—Ç–∞–∫—Ç–∏—Ä–∞–ª–∏, –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç–∏—Ç–∏ —ò–µ–¥–∞–Ω –æ–¥ —Å–ª–µ–¥–µ—õ–∏—Ö –º–µ—Ç–æ–¥–∞:\n[–ù–∞—à Discord –∫–∞–Ω–∞–ª](https://discord.com/invite/uKXcU3py3q)\n–ù–∞—à Telegramm –∫–∞–Ω–∞–ª (–ü—Ä–∏–≤—Ä–µ–º–µ–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–∞–Ω)\n[Telegramm –∑–∞ –∫—Ä–µ–∞—Ç–æ—Ä–µ](https://t.me/nalart11)')
        elif topic == "–ö–∞–∫–æ –¥–æ—õ–∏ –¥–æ –Ω–∞—Å":
            await inter.response.send_message('–ù–µ –¥–æ–ª–∞–∑–∏ —É –æ–±–∑–∏—Ä. üíÄ')

    def get_labels(self, language):
        labels = {}
        if language == 'russian':
            labels = {
                'who_are_we': "–ö—Ç–æ –º—ã —Ç–∞–∫–∏–µ",
                'partnership': "–ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ",
                'how_to_join': "–ö–∞–∫ –∫ –Ω–∞–º –ø–æ–ø–∞—Å—Ç—å",
                'change_language': "–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
                'contact_us': "–ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º"
            }
        elif language == 'english':
            labels = {
                'who_are_we': "Who are we",
                'partnership': "Partnership",
                'how_to_join': "How to get to us",
                'change_language': "Change language",
                'contact_us': "Contact us"
            }
        elif language == 'serbian':
            labels = {
                'who_are_we': "–ö–æ —Å–º–æ",
                'partnership': "–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ",
                'how_to_join': "–ö–∞–∫–æ –¥–æ—õ–∏ –¥–æ –Ω–∞—Å",
                'change_language': "–ü—Ä–æ–º–µ–Ω–∏—Ç–µ —ò–µ–∑–∏–∫",
                'contact_us': "–ö–æ–Ω—Ç–∞–∫—Ç–∏—Ä–∞—ò—Ç–µ –Ω–∞—Å"
            }
        return labels

# –ö–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
class CloseTicketView(disnake.ui.View):
    def __init__(self, language):
        super().__init__()
        self.language = language

    @disnake.ui.button(label="üîí", style=disnake.ButtonStyle.danger)
    async def close_ticket_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await inter.response.send_message(translations[self.language]['confirm_close_ticket'], view=ConfirmCloseTicketView(inter.channel, self.language))

class ConfirmCloseTicketView(disnake.ui.View):
    def __init__(self, channel, language):
        super().__init__()
        self.channel = channel
        self.language = language

    @disnake.ui.button(label="üîí", style=disnake.ButtonStyle.danger)
    async def confirm_close_ticket_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await self.channel.delete()
        await inter.send(translations[self.language]['ticket_closed'])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –≤–µ—Ç–∫–∏
async def start_dialog(inter, language):
    guild = inter.guild
    user = inter.author

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ ADMIN_CHANNEL_ID —è–≤–ª—è–µ—Ç—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
    category = guild.get_channel(ADMIN_CHANNEL_ID)
    if category is None or not isinstance(category, disnake.CategoryChannel):
        await inter.response.send_message("–û—à–∏–±–∫–∞: ADMIN_CHANNEL_ID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
        return

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –≤–µ—Ç–∫–∏
    overwrites = {
        guild.default_role: disnake.PermissionOverwrite(read_messages=False),
        user: disnake.PermissionOverwrite(read_messages=True, send_messages=True),
        guild.get_role(ADMIN_ROLE_ID): disnake.PermissionOverwrite(read_messages=True, send_messages=True)
    }
    
    channel = await guild.create_text_channel(f'private-{user.name}', overwrites=overwrites, category=category)
    
    # –£–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    await channel.send(f"{user.mention} {guild.get_role(ADMIN_ROLE_ID).mention}")
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    last_message = await channel.history(limit=1).flatten()
    if last_message:
        await last_message[0].delete()

    await channel.send(translations[language]['user_opened_ticket'].format(user=user.mention), view=CloseTicketView(language))
    
    await inter.response.send_message(translations[language]['private_thread_created'])

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run(TOKEN)
